substitutions:
  name: boneio-dr-gen2-8ch-dev04
  friendly_name: 'BoneIO Dimmer dev0.4'
  serial_prefix: 'dim2' #Don't change it.
  firmware_manifest: 'https://boneio.eu/esp/boneio-dr-gen2-8ch-dev04.json'
esphome:
  name: '${name}'
  friendly_name: '${friendly_name}'
  name_add_mac_suffix: true
  project:
    name: boneio.dimmer-led-gen2
    version: 'dev0.4'
  on_boot:
    priority: -100
    then:
      - delay: 5s
      - if:
          condition:
            lambda: 'return id(serial_no) != nullptr;'
          then:
            - component.update: serial_no
            - logger.log: "Serial No updated on boot"
          else:
            - logger.log: "Serial No component not found"

esp32:
  board: esp32-s3-devkitc-1

ethernet:
  id: eth
  type: W5500
  clk_pin: GPIO13
  mosi_pin: GPIO39
  miso_pin: GPIO38
  cs_pin: GPIO12
  interrupt_pin: GPIO2
  reset_pin: GPIO1
  clock_speed: 25MHz

external_components:
  - source: github://boneIO-eu/esphome-LM75@main #Original source and thank you note for BTomala https://github.com/boneIO-eu/esphome-lm75
    components: [lm75]

i2c:
  sda: GPIO10
  scl: GPIO11
  scan: True
  frequency: 400kHz

uart:
  id: boneio_uart
  rx_pin: GPIO21
  tx_pin: GPIO14
  baud_rate: 9600
  stop_bits: 1

output:
  - platform: ledc
    pin: GPIO18
    frequency: 1000Hz
    inverted: false
    id: chl01
  - platform: ledc
    pin: GPIO17
    frequency: 1000Hz
    inverted: false
    id: chl02
  - platform: ledc
    pin: GPIO16
    frequency: 1000Hz
    inverted: false
    id: chl03
  - platform: ledc
    pin: GPIO15
    frequency: 1000Hz
    inverted: false
    id: chl04

  - platform: ledc
    pin: GPIO7
    frequency: 1000Hz
    inverted: false
    id: chr01
  - platform: ledc
    pin: GPIO6
    frequency: 1000Hz
    inverted: false
    id: chr02
  - platform: ledc
    pin: GPIO5
    frequency: 1000Hz
    inverted: false
    id: chr03
  - platform: ledc
    pin: GPIO4
    frequency: 1000Hz
    inverted: false
    id: chr04


  ##CAN gpio48 - tx, gpio47 rx, gpio35 stb

modbus:
  send_wait_time: 80ms
  uart_id: boneio_uart
  id: boneio_modbus

packages:
  internals_packages:
    url: https://github.com/boneIO-eu/esphome
    ref: v1.6.1
    files: [
        'devices/serial_no.yaml',
        # 'devices/dimmer_i2c.yaml',
      ]
  boneiopackages:
    url: https://github.com/boneIO-eu/esphome_packages
    ref: main
    refresh: 1min
    files:
      - path: sdm630.yaml

dashboard_import:
  package_import_url: github://boneIO-eu/esphome/boneio-dimmer_g2_8ch-dev0_4.yaml@main
  import_full_config: true

pcf8574:
  - id: 'pcf_inputs'
    address: 0x38

# http_request:
#   timeout: 7s
#   verify_ssl: false
logger:
  hardware_uart: UART0
api:
  reboot_timeout: 0s
ota:
  - platform: esphome
  # - platform: http_request

# update:
#   - id: update_std
#     platform: http_request
#     name: boneIO FW Update
#     update_interval: 3 minutes
#     source: ${firmware_manifest}

web_server:
  port: 80
  version: 3
  local: true


light:
  - platform: monochromatic
    output: chl01
    name: 'CHL 01'
    id: chl_01
    default_transition_length: 2s
    gamma_correct: 0
  - platform: monochromatic
    output: chl02
    name: 'CHL 02'
    id: chl_02
    default_transition_length: 2s
    gamma_correct: 0
  - platform: monochromatic
    output: chl03
    name: 'CHL 03'
    id: chl_03
    default_transition_length: 2s
    gamma_correct: 0
  - platform: monochromatic
    output: chl04
    name: 'CHL 04'
    id: chl_04
    default_transition_length: 2s
    gamma_correct: 0

  - platform: monochromatic
    output: chr01
    name: 'CHR 01'
    id: chr_01
    default_transition_length: 2s
    gamma_correct: 0
  - platform: monochromatic
    output: chr02
    name: 'CHR 02'
    id: chr_02
    default_transition_length: 2s
    gamma_correct: 0
  - platform: monochromatic
    output: chr03
    name: 'CHR 03'
    id: chr_03
    default_transition_length: 2s
    gamma_correct: 0
  - platform: monochromatic
    output: chr04
    name: 'CHR 04'
    id: chr_04
    default_transition_length: 2s
    gamma_correct: 0

debug:
  update_interval: 15s

sensor:
  - platform: debug
    free:
      name: "Heap Free"
    block:
      name: "Heap Max Block"
    loop_time:
      name: "Loop Time"
  - platform: lm75
    id: boneIO_temp
    name: 'Temperature'
    update_interval: 30s
    entity_category: diagnostic
    on_value_range:
      - above: 70.0
        then:
          - switch.turn_on: buzzer
      - below: 70.0
        then:
          - switch.turn_off: buzzer

switch:
  - platform: gpio
    id: buzzer
    name: 'Buzzer'
    pin:
      number: GPIO9
      mode:
        output: true
      inverted: false
  - platform: gpio
    id: can_bus_switch
    name: 'CAN Bus Switch'
    pin:
      number: GPIO35
      mode:
        output: true
      inverted: false
  - platform: gpio
    name: "CAN RX"
    pin: GPIO47
  - platform: gpio
    name: "CAN TX"
    pin: GPIO48

binary_sensor:

  - platform: gpio
    name: 'IN_01'
    id: in_01
    pin:
      pcf8574: pcf_inputs
      number: 0
      mode:
        input: true
      inverted: true

  - platform: gpio
    name: 'IN_02'
    id: in_02
    pin:
      pcf8574: pcf_inputs
      number: 1
      mode:
        input: true
      inverted: true

  - platform: gpio
    name: 'IN_03'
    id: in_03
    pin:
      pcf8574: pcf_inputs
      number: 2
      mode:
        input: true
      inverted: true

  - platform: gpio
    name: 'IN_04'
    id: in_04
    pin:
      pcf8574: pcf_inputs
      number: 3
      mode:
        input: true
      inverted: true

  - platform: gpio
    name: 'IN_05'
    id: in_05
    pin:
      pcf8574: pcf_inputs
      number: 4
      mode:
        input: true
      inverted: true

  - platform: gpio
    name: 'IN_06'
    id: in_06
    pin:
      pcf8574: pcf_inputs
      number: 5
      mode:
        input: true
      inverted: true

  - platform: gpio
    name: 'IN_07'
    id: in_07
    pin:
      pcf8574: pcf_inputs
      number: 6
      mode:
        input: true
      inverted: true

  - platform: gpio
    name: 'IN_08'
    id: in_08
    pin:
      pcf8574: pcf_inputs
      number: 7
      mode:
        input: true
      inverted: true
  - platform: template
    name: CAN Bus Button
    id: can_bus_button


# canbus:
#   - platform: esp32_can
#     tx_pin: GPIO48
#     rx_pin: GPIO47
#     can_id: 4
#     bit_rate: 50kbps
#     on_frame:
#       - can_id: 5
#         then:
#           - lambda: |-
#               if(x.size() > 0) {
#                 switch(x[0]) {
#                   case 0x12:  // button release
#                     id(can_bus_button).publish_state(false);
#                     break;
#                   case 0x11:  // button press
#                     id(can_bus_button).publish_state(true);
#                     break;
#                 }
#               }

# button:
#   - platform: template
#     name: 'CAN Sensor ON'
#     on_press:
#       - logger.log: Button Pressed
#       - canbus.send: [0x11, 0x22, 0x33]
#   - platform: template
#     name: 'CAN Sensor OFF'
#     on_press:
#       - logger.log: Button Pressed
#       - canbus.send: [0x12, 0x22, 0x33]